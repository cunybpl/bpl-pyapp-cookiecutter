version: '3.8'

services:
  pgdb:
    restart: "no"
    container_name: "{{ cookiecutter.project_env_prefix }}_pg"
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB={{ cookiecutter.project_slug }}db
    volumes:
      - pgdata:/var/lib/postgresql/data
    command: postgres -c 'max_connections=100'  # roughy the size of the pg servers we use 
    expose:
      - "5432"
    ports:
      - "5454:5432" # for debugging on localhost 5454
    shm_size: 1g


  app:
    restart: "no"
    container_name: "{{ cookiecutter.project_env_prefix }}_app"
    image: {{ cookiecutter.project_env_prefix }}:dev
    environment:
      - WAIT_HOSTS=pgdb:5432
      - {{ cookiecutter.project_env_prefix }}_POSTGRES_USER=postgres
      - {{ cookiecutter.project_env_prefix }}_POSTGRES_PASSWORD=postgres
      - {{ cookiecutter.project_env_prefix }}_POSTGRES_HOST=pgdb
      - {{ cookiecutter.project_env_prefix }}_POSTGRES_PORT=5432
      - {{ cookiecutter.project_env_prefix }}_POSTGRES_DB={{ cookiecutter.project_slug }}db
      - {{ cookiecutter.project_env_prefix }}_POSTGRES_TEST_DB=testdb
      - {{ cookiecutter.project_env_prefix }}_ENVIRONMENT=local
      - {{ cookiecutter.project_env_prefix }}_AUTH0_DOMAIN=${'{{ cookiecutter.project_env_prefix }}'_AUTH0_DOMAIN}
      - {{ cookiecutter.project_env_prefix }}_AUTH0_AUDIENCE=${'{{ cookiecutter.project_env_prefix }}'_AUTH0_AUDIENCE}
      - {{ cookiecutter.project_env_prefix }}_AUTH0_CLIENT_ID=${'{{ cookiecutter.project_env_prefix }}'_AUTH0_CLIENT_ID}
      - {{ cookiecutter.project_env_prefix }}_AUTH0_SECRET=${'{{ cookiecutter.project_env_prefix }}'_AUTH0_SECRET}
      - {{ cookiecutter.project_env_prefix }}_DB_ENGINE_MAX_OVERFLOW=${'{{ cookiecutter.project_env_prefix }}'_DB_ENGINE_MAX_OVERFLOW}
      - {{ cookiecutter.project_env_prefix }}_DB_ENGINE_POOL_SIZE=${'{{ cookiecutter.project_env_prefix }}'_DB_ENGINE_POOL_SIZE}
      - {{ cookiecutter.project_env_prefix }}_LIVE_TEST_URL=${'{{ cookiecutter.project_env_prefix }}'_LIVE_TEST_URL}
    build:
      context: .
      dockerfile: ./Dockerfile
    command: sh -c "../wait && uvicorn --host 0.0.0.0 --port 8080 --log-level debug --reload {{ cookiecutter.project_env_prefix }}.api.main:app"
    volumes:
      - .:/app
    ports:
      - "8080:8080"
    depends_on:
      - pgdb

volumes:
  pgdata:

